<!-- User Registration Form - Enterprise Grade Implementation -->
<div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-md w-full space-y-8">
    <!-- Header Section with Glass Morphism -->
    <div class="text-center">
      <div class="glass rounded-2xl p-8 shadow-2xl backdrop-blur-xl bg-white/80 border border-white/20">
        <div class="mx-auto h-16 w-16 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg">
          <svg class="h-8 w-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"/>
          </svg>
        </div>
        <h2 class="mt-6 text-3xl font-bold text-gray-900 tracking-tight">
          Join <span class="text-gradient">The Final Market</span>
        </h2>
        <p class="mt-2 text-sm text-gray-600">
          Create your account and start your journey with us
        </p>
      </div>
    </div>

    <!-- Registration Form Card -->
    <div class="card-modern p-8 bg-white/90 backdrop-blur-sm shadow-xl rounded-2xl border border-white/20">
      <%= form_with(model: @user, url: users_path, method: :post, class: "space-y-6", data: { turbo: false }) do |f| %>

        <!-- Name Field with Floating Label -->
        <div class="input-group">
          <%= f.text_field :name,
              class: "input-floating peer",
              placeholder: " ",
              required: true,
              autocomplete: "name",
              pattern: "[A-Za-z\s]{2,50}",
              title: "Name must be 2-50 characters long and contain only letters and spaces" %>
          <%= f.label :name, "Full Name", class: "input-label" %>
        </div>

        <!-- Email Field with Enhanced Validation -->
        <div class="input-group">
          <%= f.email_field :email,
              class: "input-floating peer",
              placeholder: " ",
              required: true,
              autocomplete: "email",
              pattern: "[^@\s]+@[^@\s]+\.[^@\s]+",
              title: "Please enter a valid email address" %>
          <%= f.label :email, "Email Address", class: "input-label" %>
        </div>

        <!-- Password Field with Strength Indicator -->
        <div class="input-group">
          <%= f.password_field :password,
              class: "input-floating peer",
              placeholder: " ",
              required: true,
              autocomplete: "new-password",
              minlength: 8,
              pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]",
              title: "Password must contain at least 8 characters with uppercase, lowercase, number and special character" %>
          <%= f.label :password, "Password", class: "input-label" %>
          <div class="password-strength mt-2 hidden" id="password-strength">
            <div class="flex gap-1 mb-1">
              <div class="strength-bar h-1 bg-gray-200 rounded-full flex-1" data-strength="1"></div>
              <div class="strength-bar h-1 bg-gray-200 rounded-full flex-1" data-strength="2"></div>
              <div class="strength-bar h-1 bg-gray-200 rounded-full flex-1" data-strength="3"></div>
              <div class="strength-bar h-1 bg-gray-200 rounded-full flex-1" data-strength="4"></div>
            </div>
            <p class="text-xs text-gray-500 strength-text">Password strength: Weak</p>
          </div>
        </div>

        <!-- Password Confirmation Field -->
        <div class="input-group">
          <%= f.password_field :password_confirmation,
              class: "input-floating peer",
              placeholder: " ",
              required: true,
              autocomplete: "new-password" %>
          <%= f.label :password_confirmation, "Confirm Password", class: "input-label" %>
        </div>

        <!-- Terms and Conditions -->
        <div class="flex items-start space-x-3">
          <%= f.check_box :terms_accepted,
              class: "radio-modern mt-1",
              required: true %>
          <label for="user_terms_accepted" class="text-sm text-gray-700 leading-relaxed">
            I agree to the
            <%= link_to "Terms of Service", terms_path, class: "text-indigo-600 hover:text-indigo-500 font-medium transition-colors" %>
            and
            <%= link_to "Privacy Policy", privacy_path, class: "text-indigo-600 hover:text-indigo-500 font-medium transition-colors" %>
          </label>
        </div>

        <!-- Newsletter Subscription (Optional) -->
        <div class="flex items-start space-x-3">
          <%= f.check_box :newsletter_subscribed,
              class: "radio-modern mt-1" %>
          <label for="user_newsletter_subscribed" class="text-sm text-gray-700 leading-relaxed">
            Subscribe to our newsletter for updates and exclusive offers
          </label>
        </div>

        <!-- Submit Button with Loading State -->
        <%= f.submit "Create Account",
            class: "btn-primary w-full py-3 px-4 text-base font-semibold rounded-xl shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-0.5",
            data: { disable_with: "Creating Account..." } %>

        <!-- Security Notice -->
        <div class="text-center pt-4 border-t border-gray-200">
          <p class="text-xs text-gray-500 flex items-center justify-center space-x-2">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
            </svg>
            <span>Your data is protected with enterprise-grade security</span>
          </p>
        </div>
      <% end %>

      <!-- Alternative Sign-up Options -->
      <div class="mt-6">
        <div class="relative">
          <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t border-gray-300"></div>
          </div>
          <div class="relative flex justify-center text-sm">
            <span class="px-2 bg-white text-gray-500">Or continue with</span>
          </div>
        </div>

        <div class="mt-6 grid grid-cols-2 gap-3">
          <button type="button" class="w-full inline-flex justify-center py-2.5 px-4 border border-gray-300 rounded-xl shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-all duration-200 hover:shadow-md">
            <svg class="w-5 h-5" viewBox="0 0 24 24">
              <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
              <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
              <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
              <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
            </svg>
            <span class="ml-2">Google</span>
          </button>

          <button type="button" class="w-full inline-flex justify-center py-2.5 px-4 border border-gray-300 rounded-xl shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-all duration-200 hover:shadow-md">
            <svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
            <span class="ml-2">Facebook</span>
          </button>
        </div>
      </div>

      <!-- Sign-in Link -->
      <div class="text-center mt-8">
        <p class="text-sm text-gray-600">
          Already have an account?
          <%= link_to "Sign in here",
              new_session_path,
              class: "font-medium text-indigo-600 hover:text-indigo-500 transition-colors duration-200 hover:underline" %>
        </p>
      </div>
    </div>

    <!-- Trust Indicators -->
    <div class="text-center space-y-4">
      <div class="flex justify-center items-center space-x-8 text-sm text-gray-500">
        <div class="flex items-center space-x-2">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span>Secure & Encrypted</span>
        </div>
        <div class="flex items-center space-x-2">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span>GDPR Compliant</span>
        </div>
        <div class="flex items-center space-x-2">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
          </svg>
          <span>24/7 Support</span>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Enhanced JavaScript for Password Strength and UX -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const passwordField = document.querySelector('input[type="password"][name="user[password]"]');
  const passwordStrength = document.getElementById('password-strength');
  const strengthBars = document.querySelectorAll('.strength-bar');
  const strengthText = document.querySelector('.strength-text');

  if (passwordField && passwordStrength) {
    passwordField.addEventListener('input', function() {
      const password = this.value;
      const strength = calculatePasswordStrength(password);

      passwordStrength.classList.remove('hidden');
      updateStrengthIndicator(strength);

      // Real-time validation feedback
      if (password.length < 8) {
        strengthText.textContent = 'Password too short (minimum 8 characters)';
        strengthText.className = 'text-xs text-red-500 strength-text';
      } else if (strength < 2) {
        strengthText.textContent = 'Weak password - add numbers and special characters';
        strengthText.className = 'text-xs text-orange-500 strength-text';
      } else if (strength < 4) {
        strengthText.textContent = 'Good password - consider adding uppercase letters';
        strengthText.className = 'text-xs text-yellow-500 strength-text';
      } else {
        strengthText.textContent = 'Strong password!';
        strengthText.className = 'text-xs text-green-500 strength-text';
      }
    });
  }

  function calculatePasswordStrength(password) {
    let strength = 0;

    if (password.length >= 8) strength++;
    if (/[a-z]/.test(password)) strength++;
    if (/[A-Z]/.test(password)) strength++;
    if (/\d/.test(password)) strength++;
    if (/[@$!%*?&]/.test(password)) strength++;

    return strength;
  }

  function updateStrengthIndicator(strength) {
    strengthBars.forEach((bar, index) => {
      const strengthLevel = index + 1;
      bar.className = strengthLevel <= strength
        ? getStrengthBarClass(strength)
        : 'strength-bar h-1 bg-gray-200 rounded-full flex-1';
    });
  }

  function getStrengthBarClass(strength) {
    if (strength <= 1) return 'strength-bar h-1 bg-red-400 rounded-full flex-1';
    if (strength <= 2) return 'strength-bar h-1 bg-orange-400 rounded-full flex-1';
    if (strength <= 3) return 'strength-bar h-1 bg-yellow-400 rounded-full flex-1';
    return 'strength-bar h-1 bg-green-400 rounded-full flex-1';
  }

  // Form validation enhancement
  const form = document.querySelector('form');
  if (form) {
    form.addEventListener('submit', function(e) {
      const password = document.querySelector('input[name="user[password]"]').value;
      const confirmPassword = document.querySelector('input[name="user[password_confirmation]"]').value;

      if (password !== confirmPassword) {
        e.preventDefault();
        showError('Passwords do not match');
        return false;
      }

      if (calculatePasswordStrength(password) < 3) {
        e.preventDefault();
        showError('Please choose a stronger password');
        return false;
      }

      // Show loading state
      const submitBtn = form.querySelector('input[type="submit"]');
      if (submitBtn) {
        submitBtn.value = 'Creating Account...';
        submitBtn.disabled = true;
      }
    });
  }

  function showError(message) {
    // Create or update error message
    let errorDiv = document.querySelector('.form-error');
    if (!errorDiv) {
      errorDiv = document.createElement('div');
      errorDiv.className = 'form-error bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mt-4';
      form.insertBefore(errorDiv, form.firstChild);
    }
    errorDiv.textContent = message;

    // Auto-hide after 5 seconds
    setTimeout(() => {
      if (errorDiv) {
        errorDiv.remove();
      }
    }, 5000);
  }

  // Smooth scroll animations for form elements
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver(function(entries) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('scroll-fade-in', 'visible');
      }
    });
  }, observerOptions);

  // Observe form sections for animation
  document.querySelectorAll('.card-modern, .glass').forEach(el => {
    observer.observe(el);
  });
});
</script>

<style>
/* Additional styles for enhanced UX */
.input-floating:focus {
  transform: translateY(-2px);
}

.btn-primary:hover {
  background: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);
}

.text-gradient {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Password strength animation */
.strength-bar {
  transition: background-color 0.3s ease;
}

/* Form validation styles */
.form-error {
  animation: slideDown 0.3s ease-out;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Enhanced focus states for accessibility */
.input-floating:focus,
.radio-modern:focus,
.btn-primary:focus {
  outline: 2px solid #667eea;
  outline-offset: 2px;
}

/* Loading spinner for form submission */
.btn-primary:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none !important;
}

.btn-primary:disabled::after {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  margin: auto;
  border: 2px solid transparent;
  border-top-color: #ffffff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>
