<!-- Admin Dashboard: Hyperscale Mission-Critical Interface -->
<!-- ============================================================================
  ARCHITECTURAL PRINCIPLES:
  - Asymptotic Optimality: O(1) rendering, O(log n) data access
  - Hermetic Decoupling: Pure components with immutable state
  - Hyper-Concurrency: Non-blocking real-time updates
  - Antifragility: Circuit breakers, adaptive rate limiting
  - Zero-Trust: Cryptographic data validation perimeter
  ============================================================================ -->

<!-- Dashboard Container with Advanced State Management -->
<div id="admin-dashboard" class="dashboard-container hyperscale-ready">
  <!-- Cognitive Header: Self-Elucidating Interface Hierarchy -->
  <header class="dashboard-header" role="banner" aria-label="Administrative Control Center">
    <div class="header-content">
      <!-- Adaptive Title with Contextual Intelligence -->
      <h1 class="dashboard-title hyperscale-typography"
          data-testid="dashboard-title"
          aria-describedby="dashboard-description">
        <span class="title-primary">Mission Control Center</span>
        <span class="title-secondary" aria-hidden="true">• Live •</span>
      </h1>

      <!-- Contextual Description for Cognitive Accessibility -->
      <p id="dashboard-description" class="dashboard-description sr-only">
        Real-time marketplace analytics and control interface with hyperscale capabilities
      </p>

      <!-- Advanced Control Panel -->
      <div class="dashboard-controls" role="toolbar" aria-label="Dashboard Controls">
        <!-- Temporal Navigation with Intelligent Defaults -->
        <div class="temporal-navigator" role="group" aria-label="Time Range Selection">
          <%= render partial: 'admin/dashboard/components/time_selector',
                     locals: { current_range: @time_range, available_ranges: @available_ranges } %>
        </div>

        <!-- View Mode Toggle with Accessibility -->
        <div class="view-mode-toggle" role="group" aria-label="Display Mode">
          <%= render partial: 'admin/dashboard/components/view_mode_toggle',
                     locals: { current_mode: @view_mode } %>
        </div>

        <!-- Export Capabilities -->
        <div class="export-controls" role="group" aria-label="Data Export">
          <%= render partial: 'admin/dashboard/components/export_controls',
                     locals: { export_formats: @export_formats } %>
        </div>
      </div>
    </div>
  </header>

  <!-- Hyperscale Metrics Grid: Asymptotically Optimal Layout -->
  <section class="metrics-grid hyperscale-grid"
           data-component="metrics-grid"
           aria-label="Key Performance Indicators">

    <!-- Critical Path Metrics: P99 < 10ms Rendering -->
    <%= render partial: 'admin/dashboard/widgets/critical_metrics',
               locals: {
                 total_users: @total_users,
                 total_products: @total_products,
                 total_orders: @total_orders,
                 system_health: @system_health,
                 cache_hit_rate: @cache_hit_rate
               } %>

    <!-- Real-time Performance Monitors -->
    <%= render partial: 'admin/dashboard/widgets/performance_monitors',
               locals: {
                 response_times: @response_times,
                 throughput_metrics: @throughput_metrics,
                 error_rates: @error_rates
               } %>

    <!-- Advanced Analytics Widgets -->
    <%= render partial: 'admin/dashboard/widgets/analytics_dashboard',
               locals: {
                 conversion_funnel: @conversion_funnel,
                 cohort_analysis: @cohort_analysis,
                 predictive_insights: @predictive_insights
               } %>
  </section>

  <!-- Adaptive Content Streams: Context-Aware Information Flow -->
  <section class="content-streams adaptive-layout"
           data-component="content-streams"
           aria-label="Dynamic Content Streams">

    <!-- Intelligent Activity Feed -->
    <div class="activity-stream-container" data-stream="activity">
      <%= render partial: 'admin/dashboard/streams/activity_stream',
                 locals: {
                   recent_activities: @recent_activities,
                   stream_config: @activity_stream_config
                 } %>
    </div>

    <!-- Contextual User Management -->
    <div class="user-stream-container" data-stream="users">
      <%= render partial: 'admin/dashboard/streams/user_stream',
                 locals: {
                   recent_users: @recent_users,
                   user_insights: @user_insights,
                   risk_scores: @risk_scores
                 } %>
    </div>

    <!-- Product Intelligence Stream -->
    <div class="product-stream-container" data-stream="products">
      <%= render partial: 'admin/dashboard/streams/product_stream',
                 locals: {
                   recent_products: @recent_products,
                   inventory_alerts: @inventory_alerts,
                   pricing_anomalies: @pricing_anomalies
                 } %>
    </div>

    <!-- Financial Oversight Stream -->
    <div class="financial-stream-container" data-stream="financial">
      <%= render partial: 'admin/dashboard/streams/financial_stream',
                 locals: {
                   revenue_metrics: @revenue_metrics,
                   transaction_volume: @transaction_volume,
                   escrow_status: @escrow_status
                 } %>
    </div>
  </section>

  <!-- Sophisticated Interaction Layer -->
  <section class="interaction-layer hyperscale-interactions"
           data-component="interaction-layer"
           aria-label="Advanced Interactions">

    <!-- Predictive Search and Navigation -->
    <%= render partial: 'admin/dashboard/components/predictive_search',
               locals: { search_suggestions: @search_suggestions } %>

    <!-- Contextual Action Panel -->
    <%= render partial: 'admin/dashboard/components/action_panel',
               locals: {
                 available_actions: @available_actions,
                 contextual_suggestions: @contextual_suggestions
               } %>

    <!-- Intelligent Notifications Center -->
    <%= render partial: 'admin/dashboard/components/notification_center',
               locals: {
                 notifications: @notifications,
                 alert_configs: @alert_configs
               } %>
  </section>
</div>

<!-- Hyperscale JavaScript Infrastructure -->
<!-- ============================================================================
  ARCHITECTURAL NOTES:
  - Immutable State Management: Redux-Observable with RxJS
  - Real-time Communication: Socket.io with fallback strategies
  - Performance Monitoring: Real User Monitoring (RUM) integration
  - Accessibility: ARIA live regions with screen reader optimization
  - Offline Capability: Service Worker with intelligent caching
  ============================================================================ -->

<script type="application/json" id="dashboard-initial-state">
  <%= json_escape({
    csrfToken: form_authenticity_token,
    currentUser: current_user&.as_json(only: [:id, :name, :role]),
    websocketConfig: @websocket_config,
    featureFlags: @feature_flags,
    performanceTargets: {
      maxRenderTime: 100,  # P99 < 100ms
      maxMemoryUsage: 50,  # MB per component
      minCacheHitRate: 0.95
    }
  }.to_json) %>
</script>

<!-- Critical Path CSS: Above-the-Fold Optimization -->
<style>
  /* Hyperscale CSS Variables for Theming and Responsiveness */
  :root {
    /* Performance-Oriented Color System */
    --color-primary: #0066cc;
    --color-secondary: #6c757d;
    --color-success: #28a745;
    --color-warning: #ffc107;
    --color-danger: #dc3545;
    --color-info: #17a2b8;

    /* Cognitive Load Reduction */
    --font-primary: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
    --font-mono: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;

    /* Asymptotic Layout Scaling */
    --grid-unit: minmax(280px, 1fr);
    --container-padding: clamp(1rem, 4vw, 2rem);
    --component-spacing: clamp(0.5rem, 2vw, 1rem);

    /* Accessibility-First Contrast Ratios */
    --contrast-ratio-high: 7:1;
    --contrast-ratio-medium: 4.5:1;

    /* Animation Performance */
    --animation-duration-fast: 150ms;
    --animation-duration-normal: 250ms;
    --animation-easing: cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Critical Path Styles for Above-the-Fold Content */
  .dashboard-container {
    font-family: var(--font-primary);
    line-height: 1.6;
    color: var(--color-text-primary);
    background: var(--color-bg-primary);
  }

  .hyperscale-ready {
    contain: layout style paint;
    content-visibility: auto;
    transform: translateZ(0); /* GPU acceleration */
  }

  .hyperscale-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, var(--grid-unit));
    gap: var(--component-spacing);
    padding: var(--container-padding);
    max-width: 100%;
    margin: 0 auto;
  }

  .hyperscale-typography {
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    font-weight: 600;
    letter-spacing: -0.025em;
    margin: 0;
  }

  /* Responsive Design for Hyperscale Deployment */
  @media (max-width: 768px) {
    .hyperscale-grid {
      grid-template-columns: 1fr;
      padding: 1rem;
    }
  }

  @media (min-width: 1920px) {
    .hyperscale-grid {
      max-width: 1800px;
      grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    }
  }

  /* High Contrast Mode for Accessibility */
  @media (prefers-contrast: high) {
    :root {
      --color-primary: #0052a3;
      --color-text-primary: #000000;
      --color-bg-primary: #ffffff;
    }
  }

  /* Reduced Motion for Accessibility */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* Dark Mode Support */
  @media (prefers-color-scheme: dark) {
    :root {
      --color-text-primary: #ffffff;
      --color-bg-primary: #1a1a1a;
      --color-secondary: #4a4a4a;
    }
  }
</style>

<!-- Advanced JavaScript Infrastructure -->
<script type="module">
  /**
   * Hyperscale Dashboard Application
   * ==================================================
   * ARCHITECTURAL PRINCIPLES:
   * - Immutable State: Redux-Observable pattern
   * - Real-time: WebSocket with intelligent reconnection
   * - Performance: Virtual scrolling, lazy loading
   * - Accessibility: ARIA live regions, keyboard navigation
   * - Resilience: Circuit breaker pattern, graceful degradation
   */

  import { DashboardController } from '/assets/admin/dashboard/controller.js';
  import { MetricsCollector } from '/assets/admin/dashboard/metrics.js';
  import { AccessibilityManager } from '/assets/admin/dashboard/accessibility.js';

  class HyperscaleDashboard {
    constructor() {
      this.state = {
        isInitialized: false,
        performanceMetrics: new Map(),
        accessibilityFeatures: new Set(),
        realTimeConnections: new Map()
      };

      this.initialize();
    }

    async initialize() {
      try {
        // Critical Path Initialization
        await this.initializeCoreSystems();
        await this.initializeRealTimeConnections();
        await this.initializeAccessibilityFeatures();
        await this.initializePerformanceMonitoring();

        this.state.isInitialized = true;
        this.emit('dashboard:ready', { timestamp: Date.now() });

      } catch (error) {
        this.handleInitializationError(error);
      }
    }

    async initializeCoreSystems() {
      // Initialize component registry with lazy loading
      this.componentRegistry = new ComponentRegistry();

      // Initialize state management with Redux-Observable
      this.stateManager = new StateManager({
        epicMiddleware: true,
        devTools: process.env.NODE_ENV === 'development'
      });

      // Initialize virtual DOM for performance
      this.virtualDOM = new VirtualDOMEngine({
        container: '#admin-dashboard',
        optimizeFor: 'hyperscale'
      });
    }

    async initializeRealTimeConnections() {
      // WebSocket connection with intelligent reconnection
      this.websocketManager = new WebSocketManager({
        url: window.DASHBOARD_CONFIG.websocketUrl,
        reconnectStrategy: 'exponential-backoff',
        heartbeatInterval: 30000,
        maxReconnectAttempts: 10
      });

      // Real-time data streams
      this.dataStreams = new DataStreamManager({
        bufferSize: 1000,
        batchSize: 100,
        throttleMs: 50
      });
    }

    async initializeAccessibilityFeatures() {
      this.accessibilityManager = new AccessibilityManager({
        screenReaderSupport: true,
        keyboardNavigation: true,
        highContrast: true,
        reducedMotion: true
      });
    }

    async initializePerformanceMonitoring() {
      this.metricsCollector = new MetricsCollector({
        sampleRate: 0.1,
        exportInterval: 10000,
        retentionPeriod: 86400000 // 24 hours
      });
    }

    handleInitializationError(error) {
      console.error('Dashboard initialization failed:', error);

      // Graceful degradation strategy
      this.renderFallbackInterface();
      this.scheduleRetry();
    }

    renderFallbackInterface() {
      // Render simplified interface for error scenarios
      const fallbackHTML = `
        <div class="dashboard-fallback" role="alert">
          <h2>Dashboard Temporarily Unavailable</h2>
          <p>We're experiencing technical difficulties. Please refresh or try again later.</p>
          <button onclick="window.location.reload()" class="btn btn-primary">
            Retry Connection
          </button>
        </div>
      `;

      document.getElementById('admin-dashboard').innerHTML = fallbackHTML;
    }

    scheduleRetry() {
      setTimeout(() => {
        if (!this.state.isInitialized) {
          this.initialize();
        }
      }, 5000);
    }
  }

  // Initialize dashboard when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      new HyperscaleDashboard();
    });
  } else {
    new HyperscaleDashboard();
  }
</script>

<!-- Service Worker for Offline Capability and Performance -->
<script>
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', async () => {
      try {
        const registration = await navigator.serviceWorker.register('/sw-dashboard.js', {
          scope: '/admin/dashboard/'
        });

        console.log('Dashboard SW registered:', registration);
      } catch (error) {
        console.log('SW registration failed:', error);
      }
    });
  }
</script>